function rebuildGameFromSaved(games, savedGame) {
  const { gameID, players, boards, logs, globalTurn } = savedGame;

  console.log("Rebuilding: globalTurn =", globalTurn); // üîç –ª–æ–≥

  // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–≥—Ä—ã
  const game = {
    players: players.map((p, index) => ({
      username: p.username,
      ws: null, // ws –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
      turnIndex: index,
    })),
    boards: {},
    playerTargets: {}, // –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
    playerShotsLeft: {}, // –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å
    globalTurn: globalTurn ?? 0,
    maxPlayers: players.length,
    lostPlayers: new Set(players.filter((p) => p.lost).map((p) => p.username)),
    logs,
    startedAt: savedGame.createdAt,
    currentTurnTime: null,
    shotTimer: 10, // –∏–ª–∏ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  };

  // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–æ—Å–∫–∏
  for (const board of boards) {
    game.boards[board.username] = {
      cells: board.cells,
    };
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø—É–ª –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä
  games[gameID] = game;

  console.log(`–ò–≥—Ä–∞ ${gameID} –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.`);
}

module.exports = { rebuildGameFromSaved };
